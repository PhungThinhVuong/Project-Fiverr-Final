{"version":3,"file":"static/js/761.0dc7759e.chunk.js","mappings":"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","sources":["components/alert/alertFail.js","components/alert/alertSuccess.js","redux/manageSubJob/actionCallApi.js","pages/admin/manageSubJob/TableSubJob.js","redux/manageMainWork/actionCallApi.js","services/baseServices.js","services/mainWorkService.js","services/manageSubJob.js"],"sourcesContent":["import Swal from \"sweetalert2\";\n\nconst alertFail = () => {\n  Swal.fire({\n    position: \"top-end\",\n    icon: \"error\",\n    title: \"Fail\",\n    showConfirmButton: false,\n    timer: 1500,\n  });\n};\n\nexport { alertFail };\n","import Swal from \"sweetalert2\";\n\nconst alertSuccess = () => {\n  Swal.fire({\n    position: \"top-end\",\n    icon: \"success\",\n    title: \"Success\",\n    showConfirmButton: false,\n    timer: 1500,\n  });\n};\n\nexport { alertSuccess };\n","import { manageSubJobService } from \"services/manageSubJob\";\nimport { getListSubJob } from \"./subJobSlice\";\n\nexport const getListSubJobAct = () => {\n  return async (dispatch, getState) => {\n    try {\n      let result = await manageSubJobService.getListSubJobService();\n      dispatch(getListSubJob(result.data));\n    } catch (err) {\n      console.log(\"getListSubJobAct fail\", err);\n    }\n  };\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Space, Input, Table, Popconfirm } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport { getListSubJobAct } from \"redux/manageSubJob/actionCallApi\";\nimport { getListTypeMainJobAction } from \"redux/manageMainWork/actionCallApi\";\nimport { manageSubJobService } from \"services/manageSubJob\";\nimport { alertSuccess } from \"components/alert/alertSuccess\";\nimport { alertFail } from \"components/alert/alertFail\";\n\nconst { Search } = Input;\n\nexport default function TableSubJob() {\n  const [resultSearchName, setResultSearchName] = useState([]);\n  const dispatch = useDispatch();\n  const refUploadImg = useRef();\n  const { listSubJob } = useSelector((state) => state.manageSubJobReducer);\n  let idJobUploadingImg = \"\";\n  let data = [];\n\n  useEffect(() => {\n    dispatch(getListSubJobAct());\n    dispatch(getListTypeMainJobAction());\n    return () => setResultSearchName([]);\n  }, []);\n\n  const onSearch = (values) => {\n    let resultSearch = listSubJob.filter((job) => {\n      return job?.name?.toLowerCase().includes(values.toLowerCase());\n    });\n    resultSearch.length > 0 && setResultSearchName(resultSearch);\n  };\n  const columns = [\n    { title: \"Name\", dataIndex: \"name\", key: \"_id\" },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <Link to={`/admin/add-edit-SubJob/${record._id}`} className=\"btn btn-outline-success\">\n            <i className=\"fas fa-edit\"></i>\n          </Link>\n\n          <Popconfirm\n            title=\"Are you sureï¼Ÿ\"\n            okText=\"Yes\"\n            cancelText=\"No\"\n            onConfirm={() => handleDeleteSubJob(record._id)}\n          >\n            <a className=\"btn btn-outline-danger\" href=\"#\">\n              <i className=\"fas fa-trash\"></i>\n            </a>\n          </Popconfirm>\n\n          <a\n            className=\"btn btn-outline-info\"\n            onClick={() => {\n              refUploadImg.current.click();\n              idJobUploadingImg = record._id;\n            }}\n          >\n            <i className=\"fas fa-upload\"></i>\n          </a>\n        </Space>\n      ),\n    },\n  ];\n\n  function handleDeleteSubJob(idSubJob) {\n    manageSubJobService\n      .deleteScondJobService(idSubJob)\n      .then(() => {\n        alertSuccess();\n\n        dispatch(getListSubJobAct());\n        setResultSearchName([]);\n      })\n      .catch(() => alertFail());\n  }\n  if (resultSearchName.length > 0) {\n    data = resultSearchName;\n  } else {\n    data = listSubJob;\n  }\n\n  const handleChangeImage = async (e) => {\n    let file = await e.target.files[0];\n    const data = new FormData();\n    data.append(\"subtype\", file);\n    try {\n      let { status } = await manageSubJobService.upLoadSeconJobImgService(idJobUploadingImg, data);\n      if (status === 200) {\n        alertSuccess();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        onChange={handleChangeImage}\n        type=\"file\"\n        name=\"subtype\"\n        className=\"d-none\"\n        ref={refUploadImg}\n        accept=\"image/png, image/jpeg, image/jpg\"\n      />\n      <div className=\"d-block d-md-flex align-items-center justify-content-between pt-5\">\n        <Link to=\"/admin/add-edit-SubJob\" className=\"btn btn-primary mb-3 mb-md-0\">\n          Add Second Job\n        </Link>\n        <Search\n          placeholder=\"Search name\"\n          onSearch={onSearch}\n          enterButton\n          style={{ width: 360 }}\n          allowClear\n          size=\"large\"\n        />\n      </div>\n      <Table columns={columns} dataSource={data} rowKey={\"_id\"} />\n    </div>\n  );\n}\n","import { mainWorkService } from \"services/mainWorkService\";\nimport { getListMainWork, getsubTypeMainWork } from \"./mainWorkSlice\";\nimport { hideLoading, showLoading } from \"redux/loading/loadingSlice\";\n\nexport const getListTypeMainJobAction = () => {\n  return async (dispatch, getState) => {\n    dispatch(showLoading());\n    try {\n      let { status, data } = await mainWorkService.getListTypeMainJobService();\n      if (status === 200) dispatch(getListMainWork(data));\n      dispatch(hideLoading());\n    } catch (err) {\n      console.log(\"getListTypeMainJob fail\", err);\n      dispatch(hideLoading());\n    }\n  };\n};\n\nexport const getDetailTypeMainJobAction = (idMainJob) => {\n  return async (dispatch, getState) => {\n    dispatch(showLoading());\n    try {\n      let { status, data } = await mainWorkService.getDetailTypeMainJobService(idMainJob);\n      status === 200 && dispatch(getsubTypeMainWork(data));\n      dispatch(hideLoading());\n    } catch (err) {\n      dispatch(hideLoading());\n      console.log(\"getDetailTypeMainJobAction fail\", err);\n    }\n  };\n};\n","import axios from \"axios\";\nimport { DOMAIN_API, TOKEN, tokenByClass } from \"utils/setting/config\";\nconst tokenAdmin =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmUxZDBhYjRiNGMyNzAwMWM4MTFiMWUiLCJlbWFpbCI6ImNoaWVudWVoQGdtYWlsLmNvbSIsInJvbGUiOiJBRE1JTiIsImlhdCI6MTY1ODk3MTM5N30.7v7DGyufVThCYI6A3zdw77vel3w8ej7aC1mqNym45-I\";\n\nexport class BaseServices {\n  post = (url, model) => {\n    return axios({\n      method: \"POST\",\n      url: `${DOMAIN_API}/${url}`,\n      data: model,\n      headers: {\n        token: `${localStorage.getItem(TOKEN)}`,\n        tokenByClass,\n      },\n    });\n  };\n\n  get = (url) => {\n    return axios({\n      method: \"GET\",\n      url: `${DOMAIN_API}/${url}`,\n      headers: {\n        token: `${localStorage.getItem(TOKEN)}`,\n        tokenByClass,\n      },\n    });\n  };\n\n  delete = (url) => {\n    return axios({\n      method: \"DELETE\",\n      url: `${DOMAIN_API}/${url}`,\n      headers: {\n        token: `${localStorage.getItem(TOKEN)}`,\n        tokenByClass,\n      },\n    });\n  };\n\n  put = (url, model) => {\n    return axios({\n      method: \"PUT\",\n      url: `${DOMAIN_API}/${url}`,\n      data: model,\n      headers: {\n        token: `${localStorage.getItem(TOKEN)}`,\n        tokenByClass,\n      },\n    });\n  };\n\n  patch = (url, model) => {\n    return axios({\n      method: \"PATCH\",\n      url: `${DOMAIN_API}/${url}`,\n      data: model,\n      headers: {\n        token: `${localStorage.getItem(TOKEN)}`,\n        tokenByClass,\n      },\n    });\n  };\n}\n","const { BaseServices } = require(\"./baseServices\");\n\nclass mainWork extends BaseServices {\n  constructor() {\n    super();\n  }\n\n  createMainJobService = (mainJob) => this.post(`type-jobs`, mainJob); /* api 13 */\n\n  getListTypeMainJobService = () => this.get(\"type-jobs\"); /* api 14 */\n\n  deleteMainJobService = (idMainJob) => this.delete(`type-jobs/${idMainJob}`); /* api 15 */\n\n  updateMainJobService = (idMainJob, value = {}) =>\n    this.put(`type-jobs/${idMainJob}`, value); /* api16 */\n\n  getDetailTypeMainJobService = (idMainJob) => this.get(`type-jobs/${idMainJob}`); /* api 17 */\n}\n\nexport const mainWorkService = new mainWork();\n","import { BaseServices } from \"./baseServices\";\n\nclass subJob extends BaseServices {\n  constructor() {\n    super();\n  }\n\n  createSubJobService = (subJob) => this.post(`sub-type-jobs`, subJob); /* api 8 */\n  getListSubJobService = () => this.get(`sub-type-jobs`); /* api 9 */\n\n  getDetailSubJobService = (idJob) => this.get(`sub-type-jobs/${idJob}`); /* api 10 */\n\n  updateSubJobService = (idJob, model) => this.put(`sub-type-jobs/${idJob}`, model); /* api 11 */\n\n  deleteScondJobService = (idJob) => this.delete(`sub-type-jobs/${idJob}`); /* api 12 */\n\n  upLoadSeconJobImgService = (idJob, formData) =>\n    this.post(`sub-type-jobs/upload-image/${idJob}`, formData); /* api 12.1 */\n}\n\nexport const manageSubJobService = new subJob();\n"],"names":["alertFail","Swal","position","icon","title","showConfirmButton","timer","alertSuccess","getListSubJobAct","dispatch","getState","manageSubJobService","result","getListSubJob","data","console","log","Search","Input","TableSubJob","useState","resultSearchName","setResultSearchName","useDispatch","refUploadImg","useRef","listSubJob","useSelector","state","manageSubJobReducer","idJobUploadingImg","useEffect","getListTypeMainJobAction","columns","dataIndex","key","render","_","record","size","Link","to","_id","className","okText","cancelText","onConfirm","idSubJob","then","catch","href","onClick","current","click","length","handleChangeImage","e","target","files","file","FormData","append","status","onChange","type","name","ref","accept","placeholder","onSearch","values","resultSearch","filter","job","toLowerCase","includes","enterButton","style","width","allowClear","dataSource","rowKey","showLoading","mainWorkService","getListMainWork","hideLoading","getDetailTypeMainJobAction","idMainJob","getsubTypeMainWork","BaseServices","post","url","model","axios","method","DOMAIN_API","headers","token","localStorage","getItem","TOKEN","tokenByClass","get","delete","put","patch","mainWork","createMainJobService","mainJob","getListTypeMainJobService","deleteMainJobService","updateMainJobService","value","getDetailTypeMainJobService","require","subJob","createSubJobService","getListSubJobService","getDetailSubJobService","idJob","updateSubJobService","deleteScondJobService","upLoadSeconJobImgService","formData"],"sourceRoot":""}