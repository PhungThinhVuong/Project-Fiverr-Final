{"version":3,"file":"static/js/274.a7ed88aa.chunk.js","mappings":"0LAIe,SAASA,EAAT,GAA4B,IAATC,EAAQ,EAARA,KAC1BC,GAAWC,EAAAA,EAAAA,MACbC,EAAaH,EAAKI,IAAIC,MAAM,GAIhC,OAHAF,EAAaA,EAAWG,QAAQ,MAAO,IACvCH,EAAaI,OAAOJ,EAAWE,MAAMF,EAAWK,OAAS,KAGvD,gBAAKC,UAAU,OAAOC,QAAS,kBAAMT,EAAS,cAAD,OAAeD,EAAKI,KAAlC,EAA/B,UACE,UAAC,IAAD,YACE,SAAC,QAAD,CACEO,KAAK,SACLC,OAAQ,IACRC,QAAQ,MACRC,IAAKd,EAAKe,MAAQf,EAAKe,MAAQ,4BAEjC,UAAC,SAAD,YACE,SAAC,UAAD,KACA,SAAC,SAAD,CAAWJ,KAAK,SAAhB,UACE,iBAAMF,UAAU,gBAAgBO,MAAO,CAAEJ,OAAQ,SAAUK,gBAAiB,GAA5E,SACGjB,EAAKkB,UAGV,iBAAKT,UAAU,KAAf,WACE,iBAAMA,UAAU,OAAhB,UACE,cAAGA,UAAU,iCAEf,iBAAMA,UAAU,oBAAhB,SAAqCT,EAAKmB,UAC1C,kBAAMV,UAAU,aAAhB,cAA+BN,EAA/B,cAGJ,iBAAKM,UAAU,uIAAf,WACE,iBAAMA,UAAU,qBAAhB,UACE,cAAGA,UAAU,oBAEf,iBAAKA,UAAU,sBAAf,WACE,iBAAMA,UAAU,KAAhB,0BACA,kBAAMA,UAAU,UAAhB,wBAA+BT,EAAKoB,oBAM/C,C,qLC7CD,EAA2B,0B,WCcZ,SAASC,IAAY,IAAD,IAC7BC,GAAMC,EAAAA,EAAAA,SACNC,GAAMD,EAAAA,EAAAA,SACNE,GAAMF,EAAAA,EAAAA,SACFG,GAAgBC,EAAAA,EAAAA,MAAhBD,YACR,GAAkCE,EAAAA,EAAAA,UAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAKG,EAAL,KAAgBC,EAAhB,KACA,GAAsCJ,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAAwCN,EAAAA,EAAAA,WAAS,GAAjD,eAAOO,EAAP,KAAqBC,EAArB,KACA,GAA0CR,EAAAA,EAAAA,WAAS,GAAnD,eAAOS,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsDC,EAAAA,EAAAA,KACpD,SAACC,GAAD,OAAWA,EAAMC,gBAAjB,IADMC,EAAR,EAAQA,sBAAuBC,EAA/B,EAA+BA,oBAI/BC,EAAAA,EAAAA,YAAU,WACsD,iBAA1DpB,EAAYrB,MAAM,EAAGqB,EAAYqB,QAAQ,IAAK,GAAK,IACrDR,GAASS,EAAAA,EAAAA,IAA4BtB,EAAYrB,MAAMqB,EAAYqB,QAAQ,IAAK,GAAK,KACrFR,GAASU,EAAAA,EAAAA,IAAgB,MAEzBV,GAASW,EAAAA,EAAAA,MAEZ,GAAE,CAACxB,KACJoB,EAAAA,EAAAA,YAAU,WACRP,GAASY,EAAAA,EAAAA,IAAsBzB,IACN,IAArBK,EAAUvB,QAAcwB,EAAahC,EAAKK,MAAM,EAAG,IACxD,GAAE,CAACqB,IAEJ,IAAI1B,EAAO4C,EAC0B,IAAjCA,EAAsBpC,SACxBR,EAAO6C,IAGW,IAAhBZ,IAAsBjC,EAAOA,EAAKoD,QAAO,SAACC,GAAD,OAAuC,IAAzBA,EAASpB,WAAvB,MACxB,IAAjBE,IAAuBnC,EAAOA,EAAKoD,QAAO,SAACC,GAAD,OAAwC,IAA1BA,EAASlB,YAAvB,MACxB,IAAlBE,IAAwBrC,EAAOA,EAAKoD,QAAO,SAACC,GAAD,OAAyC,IAA3BA,EAAShB,aAAvB,MAE/CS,EAAAA,EAAAA,YAAU,WACRd,EAAahC,EAAKK,MAAkB,GAAZwB,EAA4B,GAAZA,EAAiB,KACzDyB,OAAOC,SAAS,CAAEC,IAAK,GAAIC,SAAU,UACtC,GAAE,CAAC5B,IAEJ,IACM6B,GAAO,GACXC,YAAa,GACbC,eAAgB,EAChBC,yBAAyB,EACzBC,iBAAiB,IAJN,oCAKc,IALd,sBAMA,IANA,yBAOG,SAACC,EAAMJ,GAAP,OAAuB7B,GAAciC,EAAO,EAA5C,IAPH,GAcb,OAJyB,IAArBhC,EAAUvB,SACZuB,EAAY/B,EAAKK,MAAM,EAAG,MAI1B,gBAAKI,UAAS,uCAAkCuD,GAAhD,SACGhE,EAAKQ,OAAS,GACb,gCAC6D,iBAA1DkB,EAAYrB,MAAM,EAAGqB,EAAYqB,QAAQ,IAAK,GAAK,IAClD,kBAEA,0CAAkBrB,EAAlB,QAGF,iBAAKjB,UAAU,kCAAf,WACE,iBAAKA,UAAU,+BAAf,WACE,kBACEC,QAAS,kBAAMwB,GAAgBD,EAAtB,EACTgC,KAAK,WACLxD,UAAU,uBACVyD,GAAI5C,KAEN,kBAAOX,KAAK,SAASF,UAAU,0BAA0B0D,QAAS7C,EAAlE,8BAIF,iBAAKb,UAAU,oCAAf,WACE,kBACEC,QAAS,kBAAM0B,GAAiBD,EAAvB,EACT8B,KAAK,WACLxD,UAAU,uBACVyD,GAAI1C,KAEN,kBAAOb,KAAK,SAASF,UAAU,0BAA0B0D,QAAS3C,EAAlE,+BAIF,iBAAKf,UAAU,+BAAf,WACE,kBACEC,QAAS,kBAAM4B,GAAkBD,EAAxB,EACT4B,KAAK,WACLxD,UAAU,uBACVyD,GAAIzC,KAEN,kBAAOd,KAAK,SAASF,UAAU,0BAA0B0D,QAAS1C,EAAlE,mCAKJ,gBAAKhB,UAAU,MAAf,mBACGsB,SADH,aACG,EAAWqC,KAAI,SAACC,GACf,OACE,gBAAK5D,UAAU,gCAAf,UACE,SAACV,EAAA,EAAD,CAASC,KAAMqE,KADmCA,EAAKjE,IAI5D,OAEH,gBAAKY,MAAO,CAAEsD,QAAStE,EAAKQ,OAAS,IAAM,QAA3C,UACE,SAAC,IAAD,CACE+D,SAAS,MACTvE,KAAMA,EACNwE,QAzEI,CAAC,CAAEC,UAAW,MAAOC,KAAM,KA0E/BC,YAAYC,EAAAA,EAAAA,IAAkBlB,WAKpC,eAAIjD,UAAU,mBAAd,gDAIP,C,4LCnIYyC,EAAmB,WAC9B,gDAAO,WAAOX,EAAUsC,GAAjB,uFACLtC,GAASuC,EAAAA,EAAAA,OADJ,kBAG0BC,EAAAA,EAAAA,oBAH1B,gBAGGC,EAHH,EAGGA,OAAQhF,EAHX,EAGWA,KACC,MAAXgF,GACFzC,GAAS0C,EAAAA,EAAAA,IAAWjF,IAEtBuC,GAAS2C,EAAAA,EAAAA,OAPN,kDASH3C,GAAS2C,EAAAA,EAAAA,OACTC,QAAQC,IAAI,wBAAZ,MAVG,0DAAP,uDAaD,EAEYpC,EAA8B,SAACqC,GAC1C,gDAAO,WAAO9C,EAAUsC,GAAjB,uFACLtC,GAASuC,EAAAA,EAAAA,OADJ,kBAG4BC,EAAAA,EAAAA,6BAA+CM,GAH3E,gBAGKL,EAHL,EAGKA,OAAQhF,EAHb,EAGaA,KACD,MAAXgF,GAAgBzC,GAAS+C,EAAAA,EAAAA,IAAsBtF,IACnDuC,GAAS2C,EAAAA,EAAAA,OALN,kDAOH3C,GAAS2C,EAAAA,EAAAA,OACTC,QAAQC,IAAI,mCAAZ,MARG,0DAAP,uDAWD,EAEYjC,EAAwB,SAACzB,GACpC,gDAAO,WAAOa,EAAUsC,GAAjB,uFACLtC,GAASuC,EAAAA,EAAAA,OADJ,kBAG0BC,EAAAA,EAAAA,uBAAyCrD,GAHnE,gBAGGsD,EAHH,EAGGA,OAAQhF,EAHX,EAGWA,KACC,MAAXgF,GACFzC,GAASU,EAAAA,EAAAA,IAAgBjD,IAE3BuC,GAAS2C,EAAAA,EAAAA,OAPN,kDASH3C,GAAS2C,EAAAA,EAAAA,OACTC,QAAQC,IAAI,6BAAZ,MAVG,0DAAP,uDAaD,EAEYG,EAA8B,WACzC,gDAAO,WAAOhD,EAAUsC,GAAjB,yGAE0BE,EAAAA,EAAAA,kCAF1B,gBAEGC,EAFH,EAEGA,OAAQhF,EAFX,EAEWA,KACC,MAAXgF,GACFzC,GAASiD,EAAAA,EAAAA,IAAyBxF,EAAKyF,aAJtC,gDAOHN,QAAQC,IAAI,gCAAZ,MAPG,yDAAP,uDAUD,C,mIC7DYM,GAAb,0CACEC,KAAO,SAACC,EAAKC,GACX,OAAOC,IAAM,CACXC,OAAQ,OACRH,IAAI,GAAD,OAAKI,EAAAA,GAAL,YAAmBJ,GACtB5F,KAAM6F,EACNI,QAAS,CACPC,MAAM,GAAD,OAAKC,aAAaC,QAAQC,EAAAA,KAC/BC,aAAAA,EAAAA,KAGL,EAXH,KAaEC,IAAM,SAACX,GACL,OAAOE,IAAM,CACXC,OAAQ,MACRH,IAAI,GAAD,OAAKI,EAAAA,GAAL,YAAmBJ,GACtBK,QAAS,CACPC,MAAM,GAAD,OAAKC,aAAaC,QAAQC,EAAAA,KAC/BC,aAAAA,EAAAA,KAGL,EAtBH,KAwBEE,OAAS,SAACZ,GACR,OAAOE,IAAM,CACXC,OAAQ,SACRH,IAAI,GAAD,OAAKI,EAAAA,GAAL,YAAmBJ,GACtBK,QAAS,CACPC,MAAM,GAAD,OAAKC,aAAaC,QAAQC,EAAAA,KAC/BC,aAAAA,EAAAA,KAGL,EAjCH,KAmCEG,IAAM,SAACb,EAAKC,GACV,OAAOC,IAAM,CACXC,OAAQ,MACRH,IAAI,GAAD,OAAKI,EAAAA,GAAL,YAAmBJ,GACtB5F,KAAM6F,EACNI,QAAS,CACPC,MAAM,GAAD,OAAKC,aAAaC,QAAQC,EAAAA,KAC/BC,aAAAA,EAAAA,KAGL,EA7CH,KA+CEI,MAAQ,SAACd,EAAKC,GACZ,OAAOC,IAAM,CACXC,OAAQ,QACRH,IAAI,GAAD,OAAKI,EAAAA,GAAL,YAAmBJ,GACtB5F,KAAM6F,EACNI,QAAS,CACPC,MAAM,GAAD,OAAKC,aAAaC,QAAQC,EAAAA,KAC/BC,aAAAA,EAAAA,KAGL,CAzDH,G,wGCwBavB,EAAoB,IA3B3B4B,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,aAAe,IAAD,yBACZ,gBAEFC,qBAAuB,SAACf,GAAD,OAAW,EAAKF,KAAL,OAAkBE,EAA7B,EAHT,EAKdgB,kBAAoB,kBAAM,EAAKN,IAAI,OAAf,EALN,EAOdO,iBAAmB,SAACC,GAAD,OAAW,EAAKP,OAAL,eAAoBO,GAA/B,EAPL,EASdC,iBAAmB,SAACD,EAAOlB,GAAR,OAAkB,EAAKY,IAAL,eAAiBM,GAASlB,EAA5C,EATL,EAWdoB,oBAAsB,SAACF,GAAD,OAAW,EAAKR,IAAL,eAAiBQ,GAA5B,EAXR,EAadG,6BAA+B,SAAC7B,GAC9B,OAAO,EAAKkB,IAAL,4BAA8BlB,EAA9B,qBACR,EAfa,EAgBd8B,YAAc,SAACC,GAAD,OAAe,EAAKV,MAAL,uBAA2BU,GAA1C,EAhBA,EAkBdC,gCAAkC,kBAAM,EAAKd,IAAL,eAAN,EAlBpB,EAoBde,uBAAyB,SAAC5F,GAAD,OAAiB,EAAK6E,IAAL,4BAA8B7E,GAA/C,EApBX,EAsBd6F,oBAAsB,SAACR,EAAOS,GAAR,OACpB,EAAK7B,KAAL,4BAA+BoB,GAASS,EADpB,EAtBR,CAEb,CAqBgE,OAAZ,UAxBjDb,C,SAAkBjB,c","sources":["pages/listJobs/JobItem.js","webpack://fiverr-project/./src/pages/listJobs/listJob.module.scss?b24c","pages/listJobs/ListJobs.js","redux/manageJobs/actionCallApi.js","services/baseServices.js","services/manageJobServices.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { Card } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function JobItem({ data }) {\n  const navigate = useNavigate();\n  let numberVote = data._id.slice(2);\n  numberVote = numberVote.replace(/\\D/g, \"\");\n  numberVote = Number(numberVote.slice(numberVote.length - 3));\n\n  return (\n    <div className=\"px-3\" onClick={() => navigate(`/detailJob/${data._id}`)}>\n      <Card>\n        <Card.Img\n          role=\"button\"\n          height={200}\n          variant=\"top\"\n          src={data.image ? data.image : \"/img/img-not-found.png\"}\n        />\n        <Card.Body>\n          <Card.Title></Card.Title>\n          <Card.Text role=\"button\">\n            <span className=\"limit-line h5\" style={{ height: \"2.8rem\", WebkitLineClamp: 2 }}>\n              {data.name}\n            </span>\n          </Card.Text>\n          <div className=\"h6\">\n            <span className=\"mr-1\">\n              <i className=\" text-warning fas fa-star\"></i>\n            </span>\n            <span className=\"text-warning mr-1\">{data.rating}</span>\n            <span className=\"text-muted\">({numberVote})</span>\n          </div>\n        </Card.Body>\n        <div className=\"d-flex justify-content-between align-items-center px-3 py-1 border border-top-secondary border-right-0 border-left-0 border-bottom-0\">\n          <span className=\"h4 mb-0 text-muted\">\n            <i className=\"fas fa-heart\"></i>\n          </span>\n          <div className=\" align-items-center\">\n            <span className=\"h6\">STARTING AT</span>\n            <span className=\"h4 ml-1\">${`${data.price}`}</span>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nJobItem.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listJobs\":\"listJob_listJobs__ICsuL\"};","import { useEffect, useId, useState } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  getListJobAction,\n  getListJobBaseMainJobAction,\n  searchJobByNameAction,\n} from \"redux/manageJobs/actionCallApi\";\nimport { searchJobByName } from \"redux/manageJobs/manageJobSlice\";\nimport JobItem from \"./JobItem\";\nimport styles from \"./listJob.module.scss\";\n\nexport default function ListJobs() {\n  let id1 = useId();\n  let id2 = useId();\n  let id3 = useId();\n  const { valueSearch } = useParams();\n  const [indexPage, setIndexPage] = useState(0);\n  let [jobRender, setJobRender] = useState([]);\n  const [proServices, setProServices] = useState(false);\n  const [localSellers, setLocalSellers] = useState(false);\n  const [onlineSellers, setOnlineSellers] = useState(false);\n  const dispatch = useDispatch();\n  const { resultSearchJobByName, listJobBaseMainJob } = useSelector(\n    (state) => state.manageJobReducer\n  );\n\n  useEffect(() => {\n    if (valueSearch.slice(0, valueSearch.indexOf(\"=\", 0) + 1) === \"type-job-id=\") {\n      dispatch(getListJobBaseMainJobAction(valueSearch.slice(valueSearch.indexOf(\"=\", 0) + 1)));\n      dispatch(searchJobByName([]));\n    } else {\n      dispatch(getListJobAction());\n    }\n  }, [valueSearch]);\n  useEffect(() => {\n    dispatch(searchJobByNameAction(valueSearch));\n    if (jobRender.length === 0) setJobRender(data.slice(0, 20));\n  }, [valueSearch]);\n\n  let data = resultSearchJobByName;\n  if (resultSearchJobByName.length === 0) {\n    data = listJobBaseMainJob;\n  }\n\n  if (proServices === true) data = data.filter((dataItem) => dataItem.proServices === true);\n  if (localSellers === true) data = data.filter((dataItem) => dataItem.localSellers === true);\n  if (onlineSellers === true) data = data.filter((dataItem) => dataItem.onlineSellers === true);\n\n  useEffect(() => {\n    setJobRender(data.slice(indexPage * 20, indexPage * 20 + 20));\n    window.scrollTo({ top: 50, behavior: \"smooth\" });\n  }, [indexPage]);\n\n  const columns = [{ dataField: \"_id\", text: \"\" }];\n  const options = {\n    sizePerPage: 20,\n    paginationSize: 8,\n    hidePageListOnlyOnePage: true,\n    hideSizePerPage: true,\n    hidePageListOnlyOnePage: true,\n    showTotal: true,\n    onPageChange: (page, sizePerPage) => setIndexPage(+page - 1),\n  };\n\n  if (jobRender.length === 0) {\n    jobRender = data.slice(0, 20);\n  }\n\n  return (\n    <div className={`container max-widthContainer ${styles.listJobs}`}>\n      {data.length > 0 ? (\n        <>\n          {valueSearch.slice(0, valueSearch.indexOf(\"=\", 0) + 1) === \"type-job-id=\" ? (\n            <p></p>\n          ) : (\n            <h1>Results for \"{valueSearch}\"</h1>\n          )}\n\n          <div className=\"d-flex justify-content-end mb-4\">\n            <div className=\"custom-control custom-switch\">\n              <input\n                onClick={() => setProServices(!proServices)}\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id={id1}\n              />\n              <label role=\"button\" className=\"custom-control-label h5\" htmlFor={id1}>\n                Pro services\n              </label>\n            </div>\n            <div className=\"custom-control custom-switch mx-3\">\n              <input\n                onClick={() => setLocalSellers(!localSellers)}\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id={id2}\n              />\n              <label role=\"button\" className=\"custom-control-label h5\" htmlFor={id2}>\n                Local sellers\n              </label>\n            </div>\n            <div className=\"custom-control custom-switch\">\n              <input\n                onClick={() => setOnlineSellers(!onlineSellers)}\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id={id3}\n              />\n              <label role=\"button\" className=\"custom-control-label h5\" htmlFor={id3}>\n                Online sellers\n              </label>\n            </div>\n          </div>\n          <div className=\"row\">\n            {jobRender?.map((item) => {\n              return (\n                <div className=\"col-12 col-md-6 col-lg-3 mb-5\" key={item._id}>\n                  <JobItem data={item} />\n                </div>\n              );\n            })}\n          </div>\n          <div style={{ display: data.length < 21 && \"none\" }}>\n            <BootstrapTable\n              keyField=\"_id\"\n              data={data}\n              columns={columns}\n              pagination={paginationFactory(options)}\n            />\n          </div>\n        </>\n      ) : (\n        <h1 className=\"text-center my-5\">No Services Found For Your Search</h1>\n      )}\n    </div>\n  );\n}\n","import { hideLoading, showLoading } from \"redux/loading/loadingSlice\";\nimport { manageJobServices } from \"services/manageJobServices\";\nimport {\n  getListJob,\n  getListJobBaseMainJob,\n  getlistServiceUserBought,\n  searchJobByName,\n} from \"./manageJobSlice\";\n\nexport const getListJobAction = () => {\n  return async (dispatch, getState) => {\n    dispatch(showLoading());\n    try {\n      let { status, data } = await manageJobServices.getListJobService();\n      if (status === 200) {\n        dispatch(getListJob(data));\n      }\n      dispatch(hideLoading());\n    } catch (err) {\n      dispatch(hideLoading());\n      console.log(\"getListJobAction fail\", err);\n    }\n  };\n};\n\nexport const getListJobBaseMainJobAction = (typeJobId) => {\n  return async (dispatch, getState) => {\n    dispatch(showLoading());\n    try {\n      const { status, data } = await manageJobServices.getListJobBaseMainJobService(typeJobId);\n      if (status === 200) dispatch(getListJobBaseMainJob(data));\n      dispatch(hideLoading());\n    } catch (err) {\n      dispatch(hideLoading());\n      console.log(\"getListJobBaseMainJobAction fail\", err);\n    }\n  };\n};\n\nexport const searchJobByNameAction = (valueSearch) => {\n  return async (dispatch, getState) => {\n    dispatch(showLoading());\n    try {\n      let { status, data } = await manageJobServices.searchJobByNameService(valueSearch);\n      if (status === 200) {\n        dispatch(searchJobByName(data));\n      }\n      dispatch(hideLoading());\n    } catch (err) {\n      dispatch(hideLoading());\n      console.log(\"searchJobByNameAction fail\", err);\n    }\n  };\n};\n\nexport const getListServiceUserBoughtAct = () => {\n  return async (dispatch, getState) => {\n    try {\n      let { status, data } = await manageJobServices.getListServiceUserBoughtService();\n      if (status === 200) {\n        dispatch(getlistServiceUserBought(data.bookingJob));\n      }\n    } catch (err) {\n      console.log(\"getListServiceUserBought fail\", err);\n    }\n  };\n};\n","import axios from \"axios\";\nimport { DOMAIN_API, TOKEN, tokenByClass } from \"utils/setting/config\";\nconst tokenAdmin =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmUxZDBhYjRiNGMyNzAwMWM4MTFiMWUiLCJlbWFpbCI6ImNoaWVudWVoQGdtYWlsLmNvbSIsInJvbGUiOiJBRE1JTiIsImlhdCI6MTY1ODk3MTM5N30.7v7DGyufVThCYI6A3zdw77vel3w8ej7aC1mqNym45-I\";\n\nexport class BaseServices {\n  post = (url, model) => {\n    return axios({\n      method: \"POST\",\n      url: `${DOMAIN_API}/${url}`,\n      data: model,\n      headers: {\n        token: `${localStorage.getItem(TOKEN)}`,\n        tokenByClass,\n      },\n    });\n  };\n\n  get = (url) => {\n    return axios({\n      method: \"GET\",\n      url: `${DOMAIN_API}/${url}`,\n      headers: {\n        token: `${localStorage.getItem(TOKEN)}`,\n        tokenByClass,\n      },\n    });\n  };\n\n  delete = (url) => {\n    return axios({\n      method: \"DELETE\",\n      url: `${DOMAIN_API}/${url}`,\n      headers: {\n        token: `${localStorage.getItem(TOKEN)}`,\n        tokenByClass,\n      },\n    });\n  };\n\n  put = (url, model) => {\n    return axios({\n      method: \"PUT\",\n      url: `${DOMAIN_API}/${url}`,\n      data: model,\n      headers: {\n        token: `${localStorage.getItem(TOKEN)}`,\n        tokenByClass,\n      },\n    });\n  };\n\n  patch = (url, model) => {\n    return axios({\n      method: \"PATCH\",\n      url: `${DOMAIN_API}/${url}`,\n      data: model,\n      headers: {\n        token: `${localStorage.getItem(TOKEN)}`,\n        tokenByClass,\n      },\n    });\n  };\n}\n","import { BaseServices } from \"./baseServices\";\n\nclass manageJob extends BaseServices {\n  constructor() {\n    super();\n  }\n  createYourJobService = (model) => this.post(`jobs`, model); /* api 19 */\n\n  getListJobService = () => this.get(\"jobs\"); /* api 20 */\n\n  deleteJobService = (idJob) => this.delete(`jobs/${idJob}`); /* api 21 */\n\n  updateJobService = (idJob, model) => this.put(`jobs/${idJob}`, model); /* api 22 */\n\n  getDetailJobService = (idJob) => this.get(`jobs/${idJob}`); /* api 23 */\n\n  getListJobBaseMainJobService = (typeJobId) => {\n    return this.get(`jobs/by-type?type=${typeJobId}&skip=0&llimit=20`); /* 25 */\n  };\n  bookService = (idService) => this.patch(`jobs/booking/${idService}`); /* api 26 */\n\n  getListServiceUserBoughtService = () => this.get(`jobs/by-user`); /* api 27 */\n\n  searchJobByNameService = (valueSearch) => this.get(`jobs/by-name?name=${valueSearch}`); /* 29 */\n\n  uploadImgJobService = (idJob, formData) =>\n    this.post(`jobs/upload-image/${idJob}`, formData); /* api 30 */\n}\n\nexport const manageJobServices = new manageJob();\n"],"names":["JobItem","data","navigate","useNavigate","numberVote","_id","slice","replace","Number","length","className","onClick","role","height","variant","src","image","style","WebkitLineClamp","name","rating","price","ListJobs","id1","useId","id2","id3","valueSearch","useParams","useState","indexPage","setIndexPage","jobRender","setJobRender","proServices","setProServices","localSellers","setLocalSellers","onlineSellers","setOnlineSellers","dispatch","useDispatch","useSelector","state","manageJobReducer","resultSearchJobByName","listJobBaseMainJob","useEffect","indexOf","getListJobBaseMainJobAction","searchJobByName","getListJobAction","searchJobByNameAction","filter","dataItem","window","scrollTo","top","behavior","options","sizePerPage","paginationSize","hidePageListOnlyOnePage","hideSizePerPage","page","styles","type","id","htmlFor","map","item","display","keyField","columns","dataField","text","pagination","paginationFactory","getState","showLoading","manageJobServices","status","getListJob","hideLoading","console","log","typeJobId","getListJobBaseMainJob","getListServiceUserBoughtAct","getlistServiceUserBought","bookingJob","BaseServices","post","url","model","axios","method","DOMAIN_API","headers","token","localStorage","getItem","TOKEN","tokenByClass","get","delete","put","patch","manageJob","createYourJobService","getListJobService","deleteJobService","idJob","updateJobService","getDetailJobService","getListJobBaseMainJobService","bookService","idService","getListServiceUserBoughtService","searchJobByNameService","uploadImgJobService","formData"],"sourceRoot":""}